---@meta
--- This file is autogenerated by lite-xl-robolox-luacats.

---@class UGCValidationService: Instance  
UGCValidationService = {}
---@param editableMesh EditableMesh
---@param meshScale Vector3
---@return float
function UGCValidationService:CalculateEditableMeshTotalSurfaceArea(editableMesh, meshScale) end

---@param editableMesh EditableMesh
---@return int
function UGCValidationService:CalculateEditableMeshUniqueUVCount(editableMesh) end

---@param editableMesh EditableMesh
---@param meshScale Vector3
---@param handleWorldCF CFrame
---@param cameraWorldCF CFrame
---@return bool
function UGCValidationService:CheckEditableMeshInCameraFrustum(editableMesh, meshScale, handleWorldCF, cameraWorldCF) end

---@param editableMesh EditableMesh
---@param controlNames Array
---@return Tuple
function UGCValidationService:GetDynamicHeadEditableMeshInactiveControls(editableMesh, controlNames) end

---@param editableImage EditableImage
---@return Vector2
function UGCValidationService:GetEditableImageSize(editableImage) end

---@param editableMesh EditableMesh
---@return int
function UGCValidationService:GetEditableMeshTriCount(editableMesh) end

---@param editableMesh EditableMesh
---@return Array
function UGCValidationService:GetEditableMeshVertColors(editableMesh) end

---@param editableMesh EditableMesh
---@return Array
function UGCValidationService:GetEditableMeshVerts(editableMesh) end

---@param instance Instance
---@param property string
---@return Variant
function UGCValidationService:GetPropertyValue(instance, property) end

---@param setFunction Function
function UGCValidationService:RegisterUGCValidationFunction(setFunction) end

---@param assetType string
---@param data Dictionary
function UGCValidationService:ReportUGCValidationTelemetry(assetType, data) end

---@param meshPart Instance
---@param collisionFidelity CollisionFidelity
function UGCValidationService:ResetCollisionFidelity(meshPart, collisionFidelity) end

---@param meshPart MeshPart
---@param editableMesh EditableMesh
---@param collisionFidelity CollisionFidelity
function UGCValidationService:ResetCollisionFidelityWithEditableMeshDataLua(meshPart, editableMesh, collisionFidelity) end

---@param meshPart Instance
---@param meshId string
function UGCValidationService:SetMeshIdBlocking(meshPart, meshId) end

---@param editableMesh EditableMesh
---@return bool
function UGCValidationService:ValidateDynamicHeadEditableMesh(editableMesh) end

---@param editableImage EditableImage
---@param numTextureChannelsRequired int
---@return bool
function UGCValidationService:ValidateEditableImageNumTextureChannels(editableImage, numTextureChannelsRequired) end

---@param editableImage EditableImage
---@return bool
function UGCValidationService:ValidateEditableImageSize(editableImage) end

---@param editableMesh EditableMesh
---@param meshScale Vector3
---@param boundsOffset Vector3
---@param attachmentCF CFrame
---@param handleCF CFrame
---@return bool
function UGCValidationService:ValidateEditableMeshBounds(editableMesh, meshScale, boundsOffset, attachmentCF, handleCF) end

---@param innerCage EditableMesh
---@param outerCage EditableMesh
---@param refMesh EditableMesh
---@return Tuple
function UGCValidationService:ValidateEditableMeshCageMeshIntersection(innerCage, outerCage, refMesh) end

---@param editableMesh EditableMesh
---@return Tuple
function UGCValidationService:ValidateEditableMeshCageNonManifoldAndHoles(editableMesh) end

---@param editableMesh EditableMesh
---@return bool
function UGCValidationService:ValidateEditableMeshCageUVCoincident(editableMesh) end

---@param editableMesh EditableMesh
---@return bool
function UGCValidationService:ValidateEditableMeshCageUVTriangleArea(editableMesh) end

---@param editableMesh EditableMesh
---@return bool
function UGCValidationService:ValidateEditableMeshFullBodyCageDeletion(editableMesh) end

---@param innerCage EditableMesh
---@param outerCage EditableMesh
---@return bool
function UGCValidationService:ValidateEditableMeshMisMatchUV(innerCage, outerCage) end

---@param editableMesh EditableMesh
---@return bool
function UGCValidationService:ValidateEditableMeshOverlappingVertices(editableMesh) end

---@param editableMesh EditableMesh
---@return bool
function UGCValidationService:ValidateEditableMeshTriangleArea(editableMesh) end

---@param editableMesh EditableMesh
---@return bool
function UGCValidationService:ValidateEditableMeshTriangles(editableMesh) end

---@param editableMesh EditableMesh
---@return bool
function UGCValidationService:ValidateEditableMeshUVSpace(editableMesh) end

---@param referenceValues Array
---@param editableMesh EditableMesh
---@return bool
function UGCValidationService:ValidateEditableMeshUVValuesInReference(referenceValues, editableMesh) end

---@param editableMesh EditableMesh
---@param numRequired int
---@return bool
function UGCValidationService:ValidateEditableMeshUniqueUVCount(editableMesh, numRequired) end

---@param editableMesh EditableMesh
---@param includeAlpha bool
---@return bool
function UGCValidationService:ValidateEditableMeshVertColors(editableMesh, includeAlpha) end

---@param editableMesh EditableMesh
---@return bool
function UGCValidationService:ValidateSkinnedEditableMesh(editableMesh) end

---@param meshId string
---@param meshScale Vector3
---@return float
function UGCValidationService:CalculateTotalSurfaceArea(meshId, meshScale) end

---@param meshId string
---@return int
function UGCValidationService:CalculateUniqueUVCount(meshId) end

---@param assetId string
---@return bool
function UGCValidationService:CanLoadAsset(assetId) end

---@param meshId string
---@param meshScale Vector3
---@param handleWorldCF CFrame
---@param cameraWorldCF CFrame
---@return bool
function UGCValidationService:CheckMeshInCameraFrustum(meshId, meshScale, handleWorldCF, cameraWorldCF) end

---@param byteStringBaseline string
---@param byteStringFollowup string
---@return Array
function UGCValidationService:CompareTextureOverlapByteString(byteStringBaseline, byteStringFollowup) end

---@param textureIdBaseline string
---@param textureIdFollowup string
---@return Array
function UGCValidationService:CompareTextureOverlapTextureId(textureIdBaseline, textureIdFollowup) end

---@param url Content
---@param assetFormat string
---@return Objects
function UGCValidationService:FetchAssetWithFormat(url, assetFormat) end

---@param meshId string
---@param controlNames Array
---@return Tuple
function UGCValidationService:GetDynamicHeadMeshInactiveControls(meshId, controlNames) end

---@param meshId string
---@return int
function UGCValidationService:GetMeshTriCount(meshId) end

---@param meshId string
---@return Array
function UGCValidationService:GetMeshVertColors(meshId) end

---@param meshId string
---@return Array
function UGCValidationService:GetMeshVerts(meshId) end

---@param textureId string
---@return Vector2
function UGCValidationService:GetTextureSize(textureId) end

---@param innerCageMeshId string
---@param outerCageMeshId string
---@param refMeshId string
---@return Tuple
function UGCValidationService:ValidateCageMeshIntersection(innerCageMeshId, outerCageMeshId, refMeshId) end

---@param meshId string
---@return Tuple
function UGCValidationService:ValidateCageNonManifoldAndHoles(meshId) end

---@param meshId string
---@return bool
function UGCValidationService:ValidateCageUVCoincident(meshId) end

---@param meshId string
---@return bool
function UGCValidationService:ValidateCageUVTriangleArea(meshId) end

---@param meshId string
---@return bool
function UGCValidationService:ValidateDynamicHeadMesh(meshId) end

---@param meshId string
---@return bool
function UGCValidationService:ValidateFullBodyCageDeletion(meshId) end

---@param image string
---@param threshold float
---@return bool
function UGCValidationService:ValidateImageTransparencyThresholdByteString(image, threshold) end

---@param image string
---@param threshold float
---@return bool
function UGCValidationService:ValidateImageTransparencyThresholdByteString_V2(image, threshold) end

---@param textureId string
---@param threshold float
---@return bool
function UGCValidationService:ValidateImageTransparencyThresholdTextureID(textureId, threshold) end

---@param textureId string
---@param threshold float
---@return bool
function UGCValidationService:ValidateImageTransparencyThresholdTextureID_V2(textureId, threshold) end

---@param meshId string
---@param meshScale Vector3
---@param boundsOffset Vector3
---@param attachmentCF CFrame
---@param handleCF CFrame
---@return bool
function UGCValidationService:ValidateMeshBounds(meshId, meshScale, boundsOffset, attachmentCF, handleCF) end

---@param meshId string
---@return bool
function UGCValidationService:ValidateMeshTriangleArea(meshId) end

---@param meshId string
---@return bool
function UGCValidationService:ValidateMeshTriangles(meshId) end

---@param meshId string
---@param includeAlpha bool
---@return bool
function UGCValidationService:ValidateMeshVertColors(meshId, includeAlpha) end

---@param innerCageMeshId string
---@param outerCageMeshId string
---@return bool
function UGCValidationService:ValidateMisMatchUV(innerCageMeshId, outerCageMeshId) end

---@param textureId string
---@param numChannelsRequired int
---@return bool
function UGCValidationService:ValidateNumTextureChannels(textureId, numChannelsRequired) end

---@param meshId string
---@return bool
function UGCValidationService:ValidateOverlappingVertices(meshId) end

---@param meshId string
---@return bool
function UGCValidationService:ValidateSkinnedMesh(meshId) end

---@param textureId string
---@param pixelWidth int
---@return bool
function UGCValidationService:ValidateTextureAlpha(textureId, pixelWidth) end

---@param byteString string
---@param pixelWidth int
---@return bool
function UGCValidationService:ValidateTextureAlphaByteString(byteString, pixelWidth) end

---@param textureId string
---@return bool
function UGCValidationService:ValidateTextureSize(textureId) end

---@param meshId string
---@return bool
function UGCValidationService:ValidateUVSpace(meshId) end

---@param referenceValues Array
---@param meshId string
---@return bool
function UGCValidationService:ValidateUVValuesInReference(referenceValues, meshId) end

---@param meshId string
---@param numRequired int
---@return bool
function UGCValidationService:ValidateUniqueUVCount(meshId, numRequired) end


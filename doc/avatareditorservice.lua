---@meta
--- This file is autogenerated by lite-xl-robolox-luacats.

---@class AvatarEditorService: Instance  
AvatarEditorService = {}
---@param avatarAssetType AvatarAssetType
---@return AccessoryType
function AvatarEditorService:GetAccessoryType(avatarAssetType) end

---@param humanoidDescription HumanoidDescription
---@param rigType HumanoidRigType
---@param name string
---@param gearAssetId int64
---@return bool
function AvatarEditorService:NoPromptCreateOutfit(humanoidDescription, rigType, name, gearAssetId) end

---@param outfitId int64
---@return bool
function AvatarEditorService:NoPromptDeleteOutfit(outfitId) end

---@param outfitId int64
---@param name string
---@return bool
function AvatarEditorService:NoPromptRenameOutfit(outfitId, name) end

---@param humanoidDescription HumanoidDescription
---@param rigType HumanoidRigType
---@param saveDict Dictionary
---@param gearAssetId int64
---@return bool
function AvatarEditorService:NoPromptSaveAvatar(humanoidDescription, rigType, saveDict, gearAssetId) end

---@param thumbnailType AvatarThumbnailCustomizationType
---@param emoteAssetId int64
---@param cameraDistanceScale float
---@param yRotDeg float
---@param fieldOfViewDeg float
---@return bool
function AvatarEditorService:NoPromptSaveAvatarThumbnailCustomization(thumbnailType, emoteAssetId, cameraDistanceScale, yRotDeg, fieldOfViewDeg) end

---@param itemId int64
---@param itemType AvatarItemType
---@param shouldFavorite bool
---@return bool
function AvatarEditorService:NoPromptSetFavorite(itemId, itemType, shouldFavorite) end

---@param outfitId int64
---@param humanoidDescription HumanoidDescription
---@param rigType HumanoidRigType
---@param gearAssetId int64
---@return bool
function AvatarEditorService:NoPromptUpdateOutfit(outfitId, humanoidDescription, rigType, gearAssetId) end

---@param humanoidDescription HumanoidDescription
---@param name string
function AvatarEditorService:PerformCreateOutfitWithDescription(humanoidDescription, name) end


function AvatarEditorService:PerformDeleteOutfit() end

---@param name string
function AvatarEditorService:PerformRenameOutfit(name) end

---@param humanoidDescription HumanoidDescription
---@param addedAssets Array
---@param removedAssets Array
function AvatarEditorService:PerformSaveAvatarWithDescription(humanoidDescription, addedAssets, removedAssets) end


function AvatarEditorService:PerformSetFavorite() end

---@param humanoidDescription HumanoidDescription
function AvatarEditorService:PerformUpdateOutfit(humanoidDescription) end


function AvatarEditorService:PromptAllowInventoryReadAccess() end

---@param outfit HumanoidDescription
---@param rigType HumanoidRigType
function AvatarEditorService:PromptCreateOutfit(outfit, rigType) end

---@param outfitId int64
function AvatarEditorService:PromptDeleteOutfit(outfitId) end

---@param outfitId int64
function AvatarEditorService:PromptRenameOutfit(outfitId) end

---@param humanoidDescription HumanoidDescription
---@param rigType HumanoidRigType
function AvatarEditorService:PromptSaveAvatar(humanoidDescription, rigType) end

---@param itemId int64
---@param itemType AvatarItemType
---@param shouldFavorite bool
function AvatarEditorService:PromptSetFavorite(itemId, itemType, shouldFavorite) end

---@param outfitId int64
---@param updatedOutfit HumanoidDescription
---@param rigType HumanoidRigType
function AvatarEditorService:PromptUpdateOutfit(outfitId, updatedOutfit, rigType) end

---@param inventoryReadAccessGranted bool
function AvatarEditorService:SetAllowInventoryReadAccess(inventoryReadAccessGranted) end


function AvatarEditorService:SignalCreateOutfitFailed() end


function AvatarEditorService:SignalCreateOutfitPermissionDenied() end


function AvatarEditorService:SignalDeleteOutfitFailed() end


function AvatarEditorService:SignalDeleteOutfitPermissionDenied() end


function AvatarEditorService:SignalRenameOutfitFailed() end


function AvatarEditorService:SignalRenameOutfitPermissionDenied() end


function AvatarEditorService:SignalSaveAvatarFailed() end


function AvatarEditorService:SignalSaveAvatarPermissionDenied() end


function AvatarEditorService:SignalSetFavoriteFailed() end


function AvatarEditorService:SignalSetFavoritePermissionDenied() end


function AvatarEditorService:SignalUpdateOutfitFailed() end


function AvatarEditorService:SignalUpdateOutfitPermissionDenied() end

---@param humanoidDescription HumanoidDescription
---@return HumanoidDescription
function AvatarEditorService:CheckApplyDefaultClothing(humanoidDescription) end

---@param humanoidDescription HumanoidDescription
---@return HumanoidDescription
function AvatarEditorService:ConformToAvatarRules(humanoidDescription) end


---@return Dictionary
function AvatarEditorService:GetAvatarRules() end

---@param itemIds Array
---@param itemType AvatarItemType
---@return Array
function AvatarEditorService:GetBatchItemDetails(itemIds, itemType) end

---@param itemId int64
---@param itemType AvatarItemType
---@return bool
function AvatarEditorService:GetFavorite(itemId, itemType) end

---@param assetTypes Array
---@return InventoryPages
function AvatarEditorService:GetInventory(assetTypes) end

---@param itemId int64
---@param itemType AvatarItemType
---@return Dictionary
function AvatarEditorService:GetItemDetails(itemId, itemType) end

---@param outfitId int64
---@return Dictionary
function AvatarEditorService:GetOutfitDetails(outfitId) end

---@param outfitSource OutfitSource
---@param outfitType OutfitType
---@return OutfitPages
function AvatarEditorService:GetOutfits(outfitSource, outfitType) end

---@param assetType AvatarAssetType
---@param contextAssetId int64
---@return Array
function AvatarEditorService:GetRecommendedAssets(assetType, contextAssetId) end

---@param bundleId int64
---@return Array
function AvatarEditorService:GetRecommendedBundles(bundleId) end

---@param searchParameters CatalogSearchParams
---@return CatalogPages
function AvatarEditorService:SearchCatalog(searchParameters) end


---@meta
--- This file is autogenerated by lite-xl-robolox-luacats.

---@class VoiceChatInternal: Instance  
VoiceChatInternal = {}

---@return string
function VoiceChatInternal:GetAndClearCallFailureMessage() end


---@return Tuple
function VoiceChatInternal:GetAudioProcessingSettings() end


---@return string
function VoiceChatInternal:GetChannelId() end


---@return string
function VoiceChatInternal:GetGroupId() end


---@return Tuple
function VoiceChatInternal:GetMicDevices() end


---@return Array
function VoiceChatInternal:GetParticipants() end


---@return string
function VoiceChatInternal:GetSessionId() end


---@return Tuple
function VoiceChatInternal:GetSpeakerDevices() end


---@return int
function VoiceChatInternal:GetVoiceChatApiVersion() end


---@return int
function VoiceChatInternal:GetVoiceChatAvailable() end


---@return string
function VoiceChatInternal:GetVoiceExperienceId() end


---@return bool
function VoiceChatInternal:IsContextVoiceEnabled() end


---@return bool
function VoiceChatInternal:IsPublishPaused() end

---@param userId int64
---@return bool
function VoiceChatInternal:IsSubscribePaused(userId) end

---@param groupId string
---@param isMicMuted bool
---@return bool
function VoiceChatInternal:JoinByGroupId(groupId, isMicMuted) end

---@param groupId string
---@param isMicMuted bool
---@param isRetry bool
---@return bool
function VoiceChatInternal:JoinByGroupIdToken(groupId, isMicMuted, isRetry) end


function VoiceChatInternal:Leave() end


---@return bool
function VoiceChatInternal:LogPublisherWebRTCStats() end


---@return bool
function VoiceChatInternal:LogSubscriptionWebRTCStats() end

---@param paused bool
---@return bool
function VoiceChatInternal:PublishPause(paused) end

---@param micDeviceName string
---@param micDeviceGuid string
function VoiceChatInternal:SetMicDevice(micDeviceName, micDeviceGuid) end

---@param speakerDeviceName string
---@param speakerDeviceGuid string
function VoiceChatInternal:SetSpeakerDevice(speakerDeviceName, speakerDeviceGuid) end

---@param userId int64
---@return bool
function VoiceChatInternal:SubscribeBlock(userId) end

---@param userId int64
---@param paused bool
---@return bool
function VoiceChatInternal:SubscribePause(userId, paused) end

---@param paused bool
---@return bool
function VoiceChatInternal:SubscribePauseAll(paused) end

---@param userId int64
---@return bool
function VoiceChatInternal:SubscribeRetry(userId) end

---@param userId int64
---@return bool
function VoiceChatInternal:SubscribeUnblock(userId) end

---@param userId int64
---@return bool
function VoiceChatInternal:IsVoiceEnabledForUserIdAsync(userId) end
---@field VoiceChatState VoiceChatState
